/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.45
 * Generated at: 2023-08-19 16:05:34 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Objects;
import model.categories.*;
import model.Model;
import model.ModelFactory;

public final class categoryProduct_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("model.categories");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.Objects");
    _jspx_imports_classes.add("model.ModelFactory");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("java.util.HashMap");
    _jspx_imports_classes.add("java.util.ArrayList");
    _jspx_imports_classes.add("model.Model");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"categoryProduct.css?v=1.1\">\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("    ");

    Model model = ModelFactory.getModel();
    String cateid = (String) request.getAttribute("cateid"); 
    
      out.write("\r\n");
      out.write("    \r\n");
      out.write("    <!-- search -->\r\n");
      out.write("    <header>\r\n");
      out.write("        <h1>All Categories</h1>\r\n");
      out.write("        <form id=\"searchForm\" action=\"searchElement.html\" method=\"POST\" onsubmit=\"return validateInput()\">\r\n");
      out.write("            <div class=\"search-note\">Note: Search Category: \"C\" + category id -> to category page<br>     Search Product: \"C\" + category id + \"P\" + product id-> to product loaction in the categpory page</div>\r\n");
      out.write("            <input class=\"header-search\" type=\"text\" name=\"searchQuery\" placeholder=\"Enter correct search pattern...\" required>\r\n");
      out.write("            <input class=\"header-search-submit\" type=\"submit\" name=\"Search\" value=\"Search\">\r\n");
      out.write("        </form>\r\n");
      out.write("        ");
 String searchResult = (String) request.getAttribute("searchResult");
        if (searchResult == "1") { 
      out.write("\r\n");
      out.write("        <div class=\"search-no-list\">No Result Found</div>\r\n");
      out.write("        ");
 } 
      out.write("\r\n");
      out.write("    </header>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    <div class=\"back-to-main\"><a href=\"http://localhost:8080/index.html\">Back to main page</a></div>\r\n");
      out.write("\r\n");
      out.write("    ");
      out.write("\r\n");
      out.write("    <div class=\"add-product-buttons\">\r\n");
      out.write("        <button type=\"button\" class=\"add-product1\">Add Single Style Product</button>\r\n");
      out.write("        <button type=\"button\" class=\"add-product2\">Add Multiple Styles Product</button>\r\n");
      out.write("    </div>\r\n");
      out.write("    <div class=\"modal\">\r\n");
      out.write("        <div class=\"modal-product-data\">\r\n");
      out.write("            <h2>Add Product</h2>\r\n");
      out.write("            <form action=\"addProduct.html\" method=\"POST\" id=\"add-product-form\">\r\n");
      out.write("                <input type=\"hidden\" name=\"cateID\" id=\"cateID\" value=\"");
      out.print( cateid );
      out.write("\">\r\n");
      out.write("                <label for=\"product-name\">Product Name:</label>\r\n");
      out.write("                <input type=\"text\" id=\"product-name\" name=\"product-name\" required>\r\n");
      out.write("                <label for=\"product-store\">Store Name:</label>\r\n");
      out.write("                <input type=\"text\" id=\"product-store\" name=\"product-store\" required>\r\n");
      out.write("                <label for=\"product-image\">Product Image:</label>\r\n");
      out.write("                <input type=\"text\" id=\"product-image\" name=\"product-image\" required>\r\n");
      out.write("                <label for=\"product-stock\">Product Stock:</label>\r\n");
      out.write("                <input type=\"text\" id=\"product-stock\" name=\"product-stock\" required>\r\n");
      out.write("                <label for=\"product-review\">Customer Review:</label>\r\n");
      out.write("                <input type=\"text\" id=\"product-review\" name=\"product-review\" required>\r\n");
      out.write("                \r\n");
      out.write("                <div class=\"add-product-form1\" id=\"text-form\" style=\"display: none;\">\r\n");
      out.write("                    <label for=\"product-style-num\">Style Number: 1</label>\r\n");
      out.write("                    <input type=\"hidden\" id=\"product-style-num\" name=\"product-style-num\" value=\"1\">\r\n");
      out.write("                    <label for=\"product-content\">Product Detail:</label><br>\r\n");
      out.write("                    <input type=\"text\" id=\"product-content\" name=\"product-content\">\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"add-product-form2\" id=\"combined-form\" style=\"display: none;\">\r\n");
      out.write("                    <label for=\"product-style-num\">Style Number:</label>\r\n");
      out.write("                    <input type=\"number\" id=\"product-style-num\" name=\"product-style-num-multiple\">\r\n");
      out.write("                    <label for=\"style-name\" style=\"margin-right:650px;\">All the Style Names (Separate by \";\" sign):</label>\r\n");
      out.write("                    <input type=\"text\" id=\"style-name\" name=\"style-name\">\r\n");
      out.write("                    <label for=\"style-description\" style=\"margin-right:650px;\">All the Style Descriptions (Separate by \";\" sign):</label>\r\n");
      out.write("                    <input type=\"text\" id=\"style-description\" name=\"style-description\">\r\n");
      out.write("                </div>\r\n");
      out.write("                <label for=\"product-id\">Product ID: ");
      out.print( model.getMaxProductID() + 1 );
      out.write("</label>\r\n");
      out.write("                <input type=\"hidden\" name=\"product-id\" id=\"product-id\" value=\"");
      out.print( model.getMaxProductID() + 1 );
      out.write("\">\r\n");
      out.write("                <input type=\"submit\" class=\"submit\" value=\"Add\">\r\n");
      out.write("                <button class=\"add-cancel\" type=\"cancel\">Cancel</button>\r\n");
      out.write("            </form>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("    </div>\r\n");
      out.write("    \r\n");
      out.write("    <script>\r\n");
      out.write("        var editproductType;\r\n");
      out.write("        const editB = document.querySelectorAll('.product-editing');\r\n");
      out.write("    </script>\r\n");
      out.write("\r\n");
      out.write("    <!-- all products -->\r\n");
      out.write("    <div class=\"products\">\r\n");
      out.write("        ");
 CategoryProducts category = (CategoryProducts) request.getAttribute("category"); 
        if (category.getProducts().size() == 0) { 
      out.write("\r\n");
      out.write("        <h1 style=\"font-weight: 700; text-align: center;\">No product in this category yet...</h1>\r\n");
      out.write("        ");
 }
        if (category != null) {
      out.write("\r\n");
      out.write("        ");
 for(ProductInterface product : category.getProducts()){ 
      out.write("\r\n");
      out.write("        <div class=\"productContainer\" onclick=\"expandProduct(event);\" id=\"productContainer");
      out.print( product.getID() );
      out.write("\">\r\n");
      out.write("            <div class=\"product-header\">\r\n");
      out.write("            <h2 class=\"product-title\">");
      out.print( product.getName() );
      out.write("</h2>\r\n");
      out.write("            <p class=\"product-description\">Click to view the detail</p>\r\n");
      out.write("            <div class=\"product-actions\">\r\n");
      out.write("                ");
      out.write("\r\n");
      out.write("                <a href=\"#\" class=\"product-editing\" data-product-id-edit=\"");
      out.print( product.getID() );
      out.write("\" product-edit-style-num=\"");
      out.print( product.getStyleNum() );
      out.write("\">Edit</a>\r\n");
      out.write("                <div class=\"product-edit\">\r\n");
      out.write("                    <div class=\"product-edit-box\">\r\n");
      out.write("                        <h2>Edit product</h2>\r\n");
      out.write("                        <form action=\"editProduct.html\" method=\"post\">\r\n");
      out.write("                            <input type=\"hidden\" name=\"editCategoryID\" id=\"editCategoryID\" value=\"");
      out.print( cateid );
      out.write("\">\r\n");
      out.write("                            <p class=\"product-edit-note\">Note: Leave the input bar empty if you do not want to change it!</p>\r\n");
      out.write("                            <label for=\"product-edit-data\">New Product Name:</label>\r\n");
      out.write("                            <input type=\"text\" id=\"product-edit-input\" name=\"newName\">\r\n");
      out.write("                            <label for=\"product-edit-data\">New Store Name:</label>\r\n");
      out.write("                            <input type=\"text\" id=\"product-edit-input\" name=\"newStore\">\r\n");
      out.write("                            <label for=\"product-edit-data\">New product Image:</label>\r\n");
      out.write("                            <input type=\"text\" id=\"product-edit-input\" name=\"newImage\">\r\n");
      out.write("                            <label for=\"product-edit-data\">New Stock Value:</label>\r\n");
      out.write("                            <input type=\"text\" id=\"product-edit-input\" name=\"newStock\">\r\n");
      out.write("                            <label for=\"product-edit-data\">New Customer Review:</label>\r\n");
      out.write("                            <input type=\"text\" id=\"product-edit-input\" name=\"newReview\">\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("                            \r\n");
      out.write("                            <div id=\"edit-product-type-specific-fields\"></div>\r\n");
      out.write("                            <input type=\"hidden\" name=\"editProductID\" id=\"editProductID\" value=\"\">\r\n");
      out.write("                            <button class=\"edit-cancel\" type=\"cancel\">Cancel</button>\r\n");
      out.write("                            <input type=\"submit\" class=\"submit\" value=\"Confirm\">\r\n");
      out.write("                        </form>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("                ");
      out.write("\r\n");
      out.write("                <a href=\"#\" class=\"product-delete\" data-product-id-delete=\"");
      out.print( product.getID() );
      out.write("\">Delete</a>\r\n");
      out.write("                <div class=\"delete-page\">\r\n");
      out.write("                    <div class=\"delete-page-content\">\r\n");
      out.write("                        <h3>Are you sure to delete this product?</h3>\r\n");
      out.write("                        <div class=\"product-delete-note\">Note: All the contents in this product will also be deleted!</div>\r\n");
      out.write("                        <form action=\"deleteProduct.html\" method=\"POST\">\r\n");
      out.write("                            <input type=\"hidden\" name=\"deleteCategoryID\" id=\"deleteCategoryID\" value=\"");
      out.print( cateid );
      out.write("\">\r\n");
      out.write("                            <input type=\"hidden\" name=\"deleteProductID\" id=\"deleteProductID\" value=\"\">\r\n");
      out.write("                            <button class=\"delete-cancel\" type=\"cancel\">Cancel</button>\r\n");
      out.write("                            <input type=\"submit\" class=\"submit\" value=\"Delete\">\r\n");
      out.write("                        </form>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("            </div>\r\n");
      out.write("            ");
      out.write("\r\n");
      out.write("            <div class=\"product-data\">\r\n");
      out.write("                <label class=\"product-data-label\">Product Image: </label><br>\r\n");
      out.write("                <img src=\"");
      out.print( product.getImage() );
      out.write("\" alt=\"\" width=\"400px\" height=\"auto\" style=\"display:block; margin:0 auto;\">\r\n");
      out.write("                <label class=\"product-data-label\">Product ID: ");
      out.print( product.getID() );
      out.write("</label><br>\r\n");
      out.write("                <label class=\"product-data-label\">Product Store Name: ");
      out.print( product.getStore() );
      out.write("</label><br>\r\n");
      out.write("                <label class=\"product-data-label\">Product Stock Value: ");
      out.print( product.getStockValue() );
      out.write("</label><br>\r\n");
      out.write("                <label class=\"product-data-label\">Product Average Customer Review Score: ");
      out.print( product.getReview() );
      out.write(" / 5.0</label><br>\r\n");
      out.write("                <label class=\"product-data-label\">Product Style Number: ");
      out.print( product.getStyleNum() );
      out.write("</label><br>\r\n");
      out.write("\r\n");
      out.write("                ");
 if(product.getStyleNum() == 1){ 
                    SingleStyleProduct SProduct = (SingleStyleProduct) product; 
      out.write("\r\n");
      out.write("                    <label class=\"product-data-label\">product Detail:</label>\r\n");
      out.write("                    <p class=\"product-data-text\">");
      out.print( SProduct.getData() );
      out.write("</p>\r\n");
      out.write("                ");
 } else { 
                    MultipleStylesProduct MProduct = (MultipleStylesProduct) product;
                    HashMap<String, String> map = MProduct.getData();
                    for(int i = 0; i < product.getStyleNum(); i++){ 
      out.write("\r\n");
      out.write("                        <label class=\"product-data-text\">Style Name ");
      out.print( i );
      out.write(':');
      out.write(' ');
      out.print( map.get("StyleName" + i) );
      out.write("</label><br>\r\n");
      out.write("                        <label class=\"product-data-text\">Style Description ");
      out.print( i );
      out.write(':');
      out.write(' ');
      out.print( map.get("StyleDesc" + i) );
      out.write("</label><br>\r\n");
      out.write("                    ");
 } 
      out.write("\r\n");
      out.write("                ");
 } 
      out.write("\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        ");
 }} 
      out.write("\r\n");
      out.write("        <div class=\"all-products-spaces\"></div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    <script>\r\n");
      out.write("        // search\r\n");
      out.write("        function validateInput() {\r\n");
      out.write("            var input = document.forms[\"searchForm\"][\"searchQuery\"].value;\r\n");
      out.write("            var cateIds = [");
      out.print( String.join(",", model.GetALLCategoryID()) );
      out.write("];\r\n");
      out.write("            var productIds = [");
      out.print( String.join(",", model.GetALLProductID()) );
      out.write("];\r\n");
      out.write("            var regex1 = /^C\\d+(P\\d+)?$/;\r\n");
      out.write("            var regex2 = /^C\\d+$/;\r\n");
      out.write("\r\n");
      out.write("            if (!regex1.test(input) && !regex2.test(input)) {\r\n");
      out.write("                alert(\"Invalid input. Please enter a valid search pattern.\");\r\n");
      out.write("                return false;\r\n");
      out.write("            }\r\n");
      out.write("            if (str.indexOf(\"I\") === -1) {\r\n");
      out.write("                var cateId = parseInt(input.substring(1));\r\n");
      out.write("                if (!cateIds.includes(cateId)) {\r\n");
      out.write("                    alert(\"Category ID not found.\");\r\n");
      out.write("                    return false;\r\n");
      out.write("                }\r\n");
      out.write("            } else {\r\n");
      out.write("                var cateId = parseInt(input.substring(1, input.indexOf(\"P\")));\r\n");
      out.write("                var productId = parseInt(input.substring(input.indexOf(\"P\") + 1));\r\n");
      out.write("                if (!cateIds.includes(cateId) || !productIds.includes(productId)) {\r\n");
      out.write("                    alert(\"Product ID not found.\");\r\n");
      out.write("                    return false;\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("            return true;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // view product\r\n");
      out.write("        function expandProduct(event) {\r\n");
      out.write("            console.log(\"expendJS:  \"+event);\r\n");
      out.write("            if (event.target.classList.contains('product-header') || event.target.classList.contains('product-title') ||\r\n");
      out.write("            event.target.classList.contains('product-description')) {\r\n");
      out.write("                var container = event.target.closest('.productContainer');\r\n");
      out.write("                container.classList.toggle('expanded');\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // add product\r\n");
      out.write("        function AddProductStyleNum(){\r\n");
      out.write("            document.styleNumForm.submit();\r\n");
      out.write("        }\r\n");
      out.write("        // var addproductTypeObj = document.querySelector('#product-type-selector')\r\n");
      out.write("        document.querySelector('.add-cancel').addEventListener('click', function(e) {\r\n");
      out.write("            e.preventDefault();\r\n");
      out.write("            document.querySelector('.modal').style.display = 'none';\r\n");
      out.write("        })\r\n");
      out.write("        document.querySelector('.add-product1').addEventListener('click', function(e) {\r\n");
      out.write("            e.preventDefault();\r\n");
      out.write("            document.querySelector('.modal').style.display = 'flex';\r\n");
      out.write("            document.querySelector(\".add-product-form1\").style.display = \"flex\";\r\n");
      out.write("            document.querySelector(\".add-product-form2\").style.display = \"none\";\r\n");
      out.write("        });\r\n");
      out.write("        document.querySelector('.add-product2').addEventListener('click', function(e) {\r\n");
      out.write("            e.preventDefault();\r\n");
      out.write("            document.querySelector('.modal').style.display = 'flex';\r\n");
      out.write("            document.querySelector(\".add-product-form2\").style.display = \"flex\";\r\n");
      out.write("            document.querySelector(\".add-product-form1\").style.display = \"none\";\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        // delete product \r\n");
      out.write("        var deleteLists = document.querySelectorAll(\".product-delete\");\r\n");
      out.write("        for (var i = 0; i < deleteLists.length; i++) {\r\n");
      out.write("            deleteLists[i].addEventListener(\"click\", function() {\r\n");
      out.write("                document.querySelector('.delete-page').style.display = 'flex';\r\n");
      out.write("            })\r\n");
      out.write("        };\r\n");
      out.write("        document.querySelector('.delete-page .delete-cancel').addEventListener('click', function(e) {\r\n");
      out.write("            e.preventDefault();\r\n");
      out.write("            document.querySelector('.delete-page').style.display = 'none';\r\n");
      out.write("        });\r\n");
      out.write("        const deleteButtons = document.querySelectorAll('.product-delete');\r\n");
      out.write("        deleteButtons.forEach(button => {\r\n");
      out.write("            button.addEventListener('click', (event) => {\r\n");
      out.write("                const productIdDelete = button.getAttribute('data-product-id-delete');\r\n");
      out.write("                const hiddenInputDelete = document.querySelector('#deleteProductID');\r\n");
      out.write("                hiddenInputDelete.value = productIdDelete;\r\n");
      out.write("            });\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        // edit product\r\n");
      out.write("        function EditProductStyleNum(){\r\n");
      out.write("            document.editStyleNumForm.submit();\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        var editLists = document.querySelectorAll(\".product-editing\");\r\n");
      out.write("        for (var i = 0; i < editLists.length; i++) {\r\n");
      out.write("            editLists[i].addEventListener(\"click\", function() {\r\n");
      out.write("                document.querySelector('.product-edit').style.display = 'flex';\r\n");
      out.write("            })\r\n");
      out.write("        };\r\n");
      out.write("        document.querySelector('.product-edit .edit-cancel').addEventListener('click', function(e) {\r\n");
      out.write("            e.preventDefault();\r\n");
      out.write("            document.querySelector('.product-edit').style.display = 'none';\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        const editButtons = document.querySelectorAll('.product-editing');\r\n");
      out.write("        var typeSpecificFields = document.querySelector('#edit-product-type-specific-fields');\r\n");
      out.write("        editButtons.forEach(button => {\r\n");
      out.write("            button.addEventListener('click', (event) => {\r\n");
      out.write("                const productIdEdit = button.getAttribute('data-product-id-edit');\r\n");
      out.write("                const hiddenInputEdit = document.querySelector('#editProductID');\r\n");
      out.write("                hiddenInputEdit.value = productIdEdit;\r\n");
      out.write("\r\n");
      out.write("                editProductStyleNum = button.getAttribute('product-edit-style-num');\r\n");
      out.write("                if (editProductStyleNum == 1) {\r\n");
      out.write("                    typeSpecificFields.innerHTML = `\r\n");
      out.write("                    <label for=\"product-edit-data\">New product Detail:</label>\r\n");
      out.write("                    <input type=\"text\" id=\"product-edit-input\" name=\"newContent\">\r\n");
      out.write("                    <input type=\"hidden\" name=\"newStyleNum\" id=\"newStyleNum\" value=\"1\">\r\n");
      out.write("                    `;\r\n");
      out.write("                } else if (editProductStyleNum > 1) {\r\n");
      out.write("                    typeSpecificFields.innerHTML = `\r\n");
      out.write("                   <label for=\"edit-style-name\" id=\"edit-style-name\" name=\"edit-style-name\">All the Style Names (Separate by \";\" sign):</label>\r\n");
      out.write("                   <input type=\"text\" id=\"edit-style-name\" name=\"edit-style-name\">\r\n");
      out.write("                   <label for=\"edit-style-description\" id=\"edit-style-description\" name=\"edit-style-description\">All the Style Descriptions (Separate by \";\" sign):</label>\r\n");
      out.write("                   <input type=\"text\" id=\"edit-style-description\" name=\"edit-style-description\">\r\n");
      out.write("                   <input type=\"hidden\" name=\"newStyleNum\" id=\"newStyleNum\" value=\"2\">\r\n");
      out.write("                   `;\r\n");
      out.write("                }\r\n");
      out.write("            });\r\n");
      out.write("        });\r\n");
      out.write("    </script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
